{% extends 'base.html.twig' %}

{% block title %} Estadísticas {% endblock %}

{% block body %}
<style>
    body {
        background-color: #121212;
        color: #fff;
        font-family: 'Arial', sans-serif;
        text-align: center;
    }
    h1 {
        color: #1DB954;
        margin-bottom: 20px;
    }
    .chart-container {
        width: 80%;
        max-width: 800px;
        margin: 20px auto;
        background: #282828;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.5);
    }
</style>

<h1>Estadísticas</h1>

<div class="chart-container"><canvas id="playlistLikesChart"></canvas></div>
<div class="chart-container"><canvas id="playlistReproduccionesChart"></canvas></div>
<div class="chart-container"><canvas id="usuariosEdadChart"></canvas></div>
<div class="chart-container"><canvas id="cancionesMasReproducidasChart"></canvas></div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
document.addEventListener("DOMContentLoaded", function () {
    const spotifyColors = ["#1DB954", "#1ED760", "#A7F3D0", "#B3E5FC", "#FF9800"];

    function getRandomColor(index) {
        return spotifyColors[index % spotifyColors.length];
    }

    // Playlist más likes
    fetch("{{ path('estadisticas_playlist_likes') }}")
        .then(response => response.json())
        .then(data => {
            const ctx = document.getElementById("playlistLikesChart").getContext("2d");
            new Chart(ctx, {
                type: "bar",
                data: {
                    labels: data.map(item => item.nombre),
                    datasets: [{
                        label: "Likes de cada playlist",
                        data: data.map(item => item.likes),
                        backgroundColor: data.map((_, i) => getRandomColor(i))
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false
                }
            });
        });

    // Playlist más reproducciones
    fetch("{{ path('estadisticas_playlist_reproducciones') }}")
        .then(response => response.json())
        .then(data => {
            const ctx = document.getElementById("playlistReproduccionesChart").getContext("2d");
            new Chart(ctx, {
                type: "bar",
                data: {
                    labels: data.map(item => item.nombre),
                    datasets: [{
                        label: "Playlists mas reproducidas",
                        data: data.map(item => item.total_reproducciones),
                        backgroundColor: data.map((_, i) => getRandomColor(i))
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false
                }
            });
        });

    // Distribución de edades de usuarios
    fetch("{{ path('estadisticas_usuarios_edad') }}")
        .then(response => response.json())
        .then(data => {
            const edadesAgrupadas = {};
            data.forEach(edad => {
                if (!edadesAgrupadas[edad]) edadesAgrupadas[edad] = 0;
                edadesAgrupadas[edad]++;
            });
            const ctx = document.getElementById("usuariosEdadChart").getContext("2d");
            new Chart(ctx, {
                type: "bar",
                data: {
                    labels: Object.keys(edadesAgrupadas),
                    datasets: [{
                        label: "Edades de usuario",
                        data: Object.values(edadesAgrupadas),
                        backgroundColor: spotifyColors
                    }]
                }
            });
        });

    // Canciones más reproducidas
    fetch("{{ path('estadisticas_canciones_mas_reproducidas') }}")
        .then(response => response.json())
        .then(data => {
            const ctx = document.getElementById("cancionesMasReproducidasChart").getContext("2d");
            new Chart(ctx, {
                type: "bar",
                data: {
                    labels: data.map(item => item.titulo),
                    datasets: [{
                        label: "Canciones mas reproducidas",
                        data: data.map(item => item.reproducciones),
                        backgroundColor: "#1DB954",
                        borderColor: "#1DB954",
                        fill: false,
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false
                }
            });
        });
});
</script>
{% endblock %}
